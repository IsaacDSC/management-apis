// Code generated by MockGen. DO NOT EDIT.
// Source: internal/management/adapter/request_api_gateway.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "bff/internal/management/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRequestApiAdapter is a mock of RequestApiAdapter interface.
type MockRequestApiAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockRequestApiAdapterMockRecorder
}

// MockRequestApiAdapterMockRecorder is the mock recorder for MockRequestApiAdapter.
type MockRequestApiAdapterMockRecorder struct {
	mock *MockRequestApiAdapter
}

// NewMockRequestApiAdapter creates a new mock instance.
func NewMockRequestApiAdapter(ctrl *gomock.Controller) *MockRequestApiAdapter {
	mock := &MockRequestApiAdapter{ctrl: ctrl}
	mock.recorder = &MockRequestApiAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestApiAdapter) EXPECT() *MockRequestApiAdapterMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockRequestApiAdapter) Request(ctx context.Context, item domain.Endpoint) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", ctx, item)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockRequestApiAdapterMockRecorder) Request(ctx, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockRequestApiAdapter)(nil).Request), ctx, item)
}
